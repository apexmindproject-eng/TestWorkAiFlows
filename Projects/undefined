class Gallery {
    constructor() {
        this.mainImage = null;
        this.thumbnailCarousel = null;
        this.currentImageIndex = 0;
        this.images = [];
        this.init();
    }

    init() {
        this.mainImage = document.getElementById("main-product-image");
        this.thumbnailCarousel = document.getElementById("thumbnail-carousel");
        
        if (!this.mainImage || !this.thumbnailCarousel) {
            return;
        }

        this.setupEventListeners();
    }

    setupEventListeners() {
        // Handle thumbnail clicks
        this.thumbnailCarousel.addEventListener("click", (e) => {
            if (e.target.tagName === "IMG" && e.target.classList.contains("thumbnail")) {
                this.switchImage(e.target.src, e.target.alt);
                this.updateActiveThumbnail(e.target);
            }
        });

        // Handle keyboard navigation
        document.addEventListener("keydown", (e) => {
            if (e.key === "ArrowLeft") {
                this.previousImage();
            } else if (e.key === "ArrowRight") {
                this.nextImage();
            }
        });
    }

    setImages(images) {
        this.images = images || [];
        this.renderThumbnails();
        
        if (this.images.length > 0) {
            this.switchImage(this.images[0]);
        }
    }

    renderThumbnails() {
        if (!this.thumbnailCarousel) return;
        
        this.thumbnailCarousel.innerHTML = "";
        
        this.images.forEach((image, index) => {
            const thumbnail = document.createElement("img");
            thumbnail.src = image;
            thumbnail.alt = `Product Image ${index + 1}`;
            thumbnail.className = "thumbnail";
            thumbnail.dataset.index = index;
            
            if (index === 0) {
                thumbnail.classList.add("active");
            }
            
            this.thumbnailCarousel.appendChild(thumbnail);
        });
    }

    switchImage(imageSrc, imageAlt = "Product Image") {
        if (!this.mainImage) return;
        
        this.mainImage.src = imageSrc;
        this.mainImage.alt = imageAlt;
        
        // Update current index
        const imageIndex = this.images.indexOf(imageSrc);
        if (imageIndex !== -1) {
            this.currentImageIndex = imageIndex;
        }
    }

    updateActiveThumbnail(activeThumbnail) {
        // Remove active class from all thumbnails
        const thumbnails = this.thumbnailCarousel.querySelectorAll(".thumbnail");
        thumbnails.forEach(thumb => thumb.classList.remove("active"));
        
        // Add active class to clicked thumbnail
        activeThumbnail.classList.add("active");
        
        this.currentImageIndex = parseInt(activeThumbnail.dataset.index);
    }

    previousImage() {
        if (this.images.length === 0) return;
        
        this.currentImageIndex = (this.currentImageIndex - 1 + this.images.length) % this.images.length;
        this.switchImage(this.images[this.currentImageIndex]);
        this.updateThumbnailByIndex(this.currentImageIndex);
    }

    nextImage() {
        if (this.images.length === 0) return;
        
        this.currentImageIndex = (this.currentImageIndex + 1) % this.images.length;
        this.switchImage(this.images[this.currentImageIndex]);
        this.updateThumbnailByIndex(this.currentImageIndex);
    }

    updateThumbnailByIndex(index) {
        const thumbnails = this.thumbnailCarousel.querySelectorAll(".thumbnail");
        thumbnails.forEach((thumb, i) => {
            thumb.classList.toggle("active", i === index);
        });
    }

    getCurrentImage() {
        return this.images[this.currentImageIndex] || null;
    }

    destroy() {
        if (this.thumbnailCarousel) {
            this.thumbnailCarousel.innerHTML = "";
        }
        this.images = [];
        this.currentImageIndex = 0;
    }
}

// Export for use in other modules
if (typeof module !== "undefined" && module.exports) {
    module.exports = Gallery;
} else {
    window.Gallery = Gallery;
}